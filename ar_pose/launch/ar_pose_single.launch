<launch>
  <node pkg="rviz" type="rviz" name="rviz" 
    args="-d $(find ar_pose)/launch/live_single.rviz"/>
  <node pkg="tf" type="static_transform_publisher" name="world_to_cam" 
    args="0 0 0.5 -1.57 0 -1.57 world camera 10" />

  <node ns="camera" pkg="image_proc" type="image_proc" name="image_proc"/>

<!-- This the new thing, I will add
	This will make this ar_pose work with usb_cam
-->

  <node name="camera" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video0" />
    <param name="image_width" value="320" />
    <param name="image_height" value="240" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" type="string" value="camera" />

    <param name="io_method" value="mmap"/>

  </node>
<!--
 This is for the uvc_camera package, the most important thing is to public the frame:
here the param name is frame. In the usb_cam package the frame name is camera_frame_id

  <node ns="camera" pkg="uvc_camera" type="camera_node" name="uvc_camera"
    output="screen">
    <param name="width" type="int" value="320" />
    <param name="height" type="int" value="240" />
    <param name="fps" type="int" value="30" />
    <param name="frame" type="string" value="camera" />
    <param name="device" type="string" value="/dev/video1" />
    <param name="camera_info_url" type="string"
      value="file://$(find uvc_camera)/camera_calibration.yaml" />
  </node>
-->
  <node name="ar_pose" pkg="ar_pose" type="ar_single" respawn="false"
    output="screen">
    <param name="marker_pattern" type="string"
      value="$(find ar_pose)/data/4x4/4x4_1.patt"/>
    <param name="marker_width" type="double" value="152.4"/>
    <param name="marker_center_x" type="double" value="0.0"/>
    <param name="marker_center_y" type="double" value="0.0"/>
    <param name="threshold" type="int" value="100"/>
    <param name="use_history" type="bool" value="true"/>
  </node>
</launch>
